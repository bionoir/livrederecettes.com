<?php

namespace FD\LivrederecettesBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * MenuRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MenuRepository extends EntityRepository {
    
    public function getIngredients($menuId) {
        
        $rsm = new ResultSetMapping();
        
        $rsm->addEntityResult('FD\LivrederecettesBundle\Entity\Menu', 'm');
               
        $rsm->addScalarResult('i_quantity', 'i_quantity');
        $rsm->addScalarResult('pt_value', 'pt_value');
        $rsm->addScalarResult('pr_name', 'pr_name');
        $rsm->addScalarResult('u_value', 'u_value');
        
        $sql = 'SELECT SUM(i.Quantity) as i_quantity, pt.Value as pt_value, pr.Name as pr_name, u.Value as u_value ' .
                'FROM menu m ' .
                'JOIN meal me ON me.menu_id = m.id ' .
                'JOIN recipe r ON r.id = me.recipe_id ' .
                'JOIN ingredient i ON i.recipe_id = r.id ' .
                'JOIN unit u ON u.id = i.unit_id ' .
                'JOIN product pr ON pr.id = i.product_id ' .
                'JOIN producttype pt ON pt.id = pr.productType_id ' .
                'WHERE m.id = ? ' .
                'GROUP BY pt.Value, pr.Name, u.Value ' .
                'ORDER BY pt.Value, pr.Name';
               
        
        $query = $this->_em->createNativeQuery($sql, $rsm);
        
        $query->setParameter(1, $menuId);
        
        $results = $query->getResult();
        
        return $results;
    }
}
